=pod

=head1 NAME

Web::Starch::Store::CHI - Session storage backend using CHI.

=head1 SYNOPSIS

    my $starch = Web::Starch->new(
        store => {
            class => '::CHI',
            driver => 'File',
            root_dir => '/path/to/root',
        },
        expires => 60 * 60 * 15, # 15 minutes
        ...,
    );

=head1 DESCRIPTION

This Starch store uses CHI to set and get session data.

=head1 CONSTRUCTOR

The arguments to this class are automatically shifted into the
L</chi> argument if the L</chi> argument is not specified. So,

    store => {
        class  => '::CHI',
        driver => 'Memory',
        global => 0,
    },

Is the same as:

    store => {
        class  => '::CHI',
        chi => {
            driver => 'Memory',
            global => 0,
        },
    },

Also, don't forget about method proxies which allow you to build
the L<CHI> object using your own code but still specify a static
configuration.  The below is equivelent to the previous two examples:

    package MyCHI;
    sub get_chi {
        my ($class) = @_;
        return CHI->new( driver=>'Memory', global=>0 );
    }

    store => {
        class  => '::CHI',
        chi => [ '&proxy', 'MyCHI', 'get_chi' ],
    },

You can read more about method proxies add
L<Web::Starch::Manual/METHOD PROXIES>.

=head1 REQUIRED ARGUMENTS

=head2 chi

This must be set to either hash ref arguments for L<CHI> or a
pre-built CHI object (often retrieved using a method proxy).

When configuring Starch from static configuration files using a
method proxy is a good way to link your existing L<CHI> object
constructor in with Starch so that starch doesn't build its own.

=head1 STORE METHODS

See L<Web::Starch::Store> for more documentation about the methods
which all stores implement.

=head1 AUTHOR

Aran Clary Deltac <bluefeetE<64>gmail.com>

=head1 ACKNOWLEDGEMENTS

Thanks to L<ZipRecruiter|https://www.ziprecruiter.com/>
for encouraging their employees to contribute back to the open
source ecosystem.  Without their dedication to quality software
development this distribution would not exist.

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
